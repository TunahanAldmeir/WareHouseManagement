@model EntityLayer.Concrete.User
@{
    ViewData["Title"] = "Müşterilerim";
    Layout = "~/Views/Shared/_Sales.cshtml";
}
<style>
    .left {
        left: 25px;
    }

    .right {
        right: 25px;
    }

    .center {
        text-align: center;
    }

    .bottom {
        position: absolute;
        bottom: 25px;
    }

    #gradient {
        background: #999955;
        background-image: linear-gradient(#DAB046 20%, #D73B25 20%, #D73B25 40%, #C71B25 40%, #C71B25 60%, #961A39 60%, #961A39 80%, #601035 80%);
        margin: 0 auto;
        margin-top: 50px;
        width: 100%;
        height: 150px;
    }

        #gradient:after {
            content: "";
            position: absolute;
            background: #E9E2D0;
            left: 50%;
            margin-top: -67.5px;
            margin-left: -270px;
            padding-left: 20px;
            border-radius: 5px;
            width: 520px;
            height: 275px;
            z-index: -1;
        }

    #card {
        position: absolute;
        width: 450px;
        height: 225px;
        padding: 25px;
        padding-top: 0;
        padding-bottom: 0;
        left: 50%;
        top: 10px;
        margin-left: -250px;
        background: #E9E2D0;
        box-shadow: -20px 0 35px -25px black, 20px 0 35px -25px black;
        z-index: 5;
    }

        #card img {
            width: 150px;
            float: left;
            border-radius: 5px;
            margin-right: 20px;
            -webkit-filter: sepia(1);
            -moz-filter: sepia(1);
            filter: sepia(1);
        }

        #card h2 {
            font-family: courier;
            color: #333;
            margin: 0 auto;
            padding: 0;
            font-size: 15pt;
        }

        #card p {
            font-family: courier;
            color: #555;
            font-size: 13px;
        }

        #card span {
            font-family: courier;
        }
</style>

<div id="gradient"></div>
<div id="card">
        <img src="@Model.Picture" />
        <h2>@Model.Name  @Model.LastName</h2>
        <p></p>
        <p>Interested in Web technologies like HTML5, CSS3, JavaScript, PHP, MySQL, etc.</p>
        <p>Love Codepen.io and respect Chris Coyier. ;)</p>
        <span class="left bottom"> @Model.Email </span>
        <span class="right bottom">
        @if (Model.Status == true)
        {
            <text>Aktif</text>
        }
        else
        {
            <text>Pasif</text>
        }
        </span>
</div>
<div id="data-grid-demo">
    @(Html.DevExtreme().DataGrid<EntityLayer.Concrete.Costumer>()
            .ID("gridContainer")
            .ShowBorders(true)
            .Paging(p => p.Enabled(false))
            .Editing(e => e.Mode(GridEditMode.Popup).UseIcons(true)
            .AllowUpdating(true)
            .AllowAdding(true)
            .AllowDeleting(true)
            .Popup(p => p
            .Title("Depo Bilgi")
            .ShowTitle(true)
            .Width(700)
            .Height(400)
            )
            .Form(f => f.Items(items =>
            {
                items.AddGroup()
            .ColCount(2)
            .ColSpan(2)
            .Items(groupItems =>
            {
                groupItems.AddSimpleFor(m => m.CostumerName);
                groupItems.AddSimpleFor(m => m.CostumerAge);
                groupItems.AddSimpleFor(m => m.Address);
                groupItems.AddSimpleFor(m => m.Email);
                groupItems.AddSimpleFor(m => m.CostumerName);
                groupItems.AddSimpleFor(m => m.CostumerPhoneNumber).IsRequired(false);
                groupItems.AddSimpleFor(m => m.Status);
            });
            }))
            )
            .Columns(columns =>
            {
                columns.AddFor(m =>m.CostumerId)
            .AllowEditing(false)
            .Alignment(HorizontalAlignment.Center)
            .Width(70);

                columns.AddFor(m => m.CostumerName)
            .Alignment(HorizontalAlignment.Center);
                columns.AddFor(m => m.Address)
            .Alignment(HorizontalAlignment.Center);


                columns.AddFor(m => m.CostumerAge)
            .Alignment(HorizontalAlignment.Center);

                columns.AddFor(m => m.Status)
            .Alignment(HorizontalAlignment.Center);
                columns.AddFor(m => m.Email)
            .Alignment(HorizontalAlignment.Center);
            columns.AddFor(m => m.CostumerPhoneNumber)
            .Alignment(HorizontalAlignment.Center);
                
            columns.AddFor(m => m.CostumerId)
            .Width(200)
            .AllowFiltering(false)
            .Caption("Siparişler")
            .AllowSorting(false)
            .Alignment(HorizontalAlignment.Center)
            .CellTemplate(@<text>
                <div>
                    <a class="btn btn-primary" href="~/Order/Order/<%- value %>" role="button">Siparişleri Gör</a>
                </div>
            </text>);
            })
        .DataSource(d => d.Mvc()
        .Controller("Sales")
        .LoadAction("Get")
        .UpdateAction("Put")
        .InsertAction("Post")
        .DeleteAction("Delete")
        .Key("CostumerId")
        )
        .SearchPanel(s => s
        .Visible(true)
        .HighlightCaseSensitive(true))
        )
</div>



